namespace MagicSquare
{
    internal class MagicSquare
    {
        static void Main(string[] args)
        {
            // 최초의 1이 채워지는 자리는 2차원 배열의 첫줄 가운데열이다.(짝수배열이 안된다)
            // 마방진의 채워지는 숫자가 배열의 차수(n)의 배수면 다음 숫자는 아래행에 채워진다.
            // => 행만 1증가
            // 마방진에 채워진 숫자가 배열의 차수(n)가 아니면 다음숫자는 오른쪽 위 방향에 채워진다.
            // => 행은 1감소 열은 1증가
            // 행이 배열의 범위를 벗어나면 마지막 행으로 수정하고
            // 열이 배열의 범위를 벗어나면 첫번째 열로 수정한다.


            int[,] a = new int[5, 5];

            // 마방진을 구현할 배열이 5행 5열일 경우, 최초의 1이 채워질 위치를 정한다.

            int i = 0;
            int j = a.GetLength(1) / 2;

            // 마방진에 채워질 숫자의 개수만큼 반복하면서 마방진을 완성한다.

            for (int k = 1; k <= 25; k++)
            {
                // 마방진에 숫자를 채운다.
                a[i, j] = k;
                // 마방진에 채운 숫자(k)가 5의 배수인가 판단한다.
                if (k % 5 == 0)
                {
                    i++;
                }
                else
                {
                    // 마방진에 채운 숫자가 5의 배수가 아니면
                    // 다음숫자는 오른쪽 위 방향으로 채운다.

                    if (--i == -1)
                    {
                        //행이 배열의 범위를 벗어나면 마지막 행으로 이동한다.
                        i = 4;
                    }
                    if (++j == 5)
                    {
                        //열이 배열의 범위를 벗어나면 첫번째 열로 이동한다.
                        j = 0;
                    }
                }
            }

            //출력
            for (i = 0; i < a.GetLength(0); i++) //행
            {
                for (j = 0; j < a.GetLength(1); j++) //열
                {
                    Console.Write($"{a[i, j],-4:00}");
                }
                Console.WriteLine();
            }

        }
    }
}
